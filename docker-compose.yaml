version: '3'

services:
  db:
    image: postgres:11.1
    environment:
      POSTGRES_PASSWORD: cloudships
      POSTGRES_DB: cloudships
    volumes:
      - pg_data:/var/lib/postgresql/data

  django:
    build: .
    environment:
        DEBUG: "true"
        DATABASE_URL: postgres://postgres:cloudships@db:5432/cloudships
        SECRET_KEY: a-secret-key
        PORT: 80
        DISPATCH_URL: http://dispatcher/
        PYTHONUNBUFFERED: 1
    command: python manage.py runserver 0.0.0.0:80
    working_dir: /app/code
    volumes:
      - .:/app/code
      - ~/.ipython:/root/.ipython:cached
    ports:
      - "8645:80"
    depends_on:
      - db

  dispatcher:
    build: ./dispatcher
    environment:
      PORT: 80
    links:
      - django

  player1:
    build: ./example_client
    environment:
      GAME_TOKEN: ${GAME_TOKEN_P1}
      PORT: 80
      PYTHONUNBUFFERED: 1
    volumes:
      - ./example_client:/code
    links:
      - django

  player2:
    build: ./example_client
    environment:
      GAME_TOKEN: ${GAME_TOKEN_P2}
      PORT: 80
      PYTHONUNBUFFERED: 1
    volumes:
      - ./example_client:/code
    links:
      - django

  player_hottest100:
    build: ./hottest100
    environment:
      GAME_TOKEN: ${GAME_TOKEN_P2}
      PORT: 80
    volumes:
      - ./hottest100:/code
    links:
      - django
  oh_ship:
    build: ./oh_ship!
    environment:
      GAME_TOKEN: ${GAME_TOKEN_P1}
      PORT: 80
      PYTHONUNBUFFERED: 1
    volumes:
      - ./oh_ship!:/code
    links:
      - django

# the following are used to connect to prod/uat instances locally.
# use with ./cloudshell.py
  clouddb:
    image: gcr.io/cloudsql-docker/gce-proxy:1.16
    command: /cloud_sql_proxy -instances=${DB_INSTANCE}=tcp:0.0.0.0:5432 -credential_file=/config
    volumes:
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/config:ro

  cloudshell:
    image: gcr.io/${PROJECT_ID}/${CONTAINER_NAME}
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@clouddb:5432/${DB_NAME}
      SECRET_KEY: unused
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/keys/creds.json
    command: bash
    stdin_open: true
    tty: true
    volumes:
      - ~/.ipython:/root/.ipython:cached
      - ${GOOGLE_APPLICATION_CREDENTIALS}:/tmp/keys/creds.json:ro
      - ./data/:/tmp/data/:cached
    depends_on:
      - clouddb

  cloudpsql:
    image: postgres:11.1
    command: bash -c "sleep 2 ; psql"  # let the cloudshell start.
    stdin_open: true
    tty: true
    environment:
      PGPASSWORD: ${DB_PASSWORD}
      PGHOST: clouddb
      PGDATABASE: ${DB_NAME}
      PGUSER: ${DB_USER}
    depends_on:
      - clouddb

volumes:
    pg_data:
